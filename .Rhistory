events_on_page <- GET(paste0(url, apikey, SheffieldCityCentre, radius, source, dates, page, page_number)) %>% content()
}
# list of list for all events from all pages
events <- lapply(1:totalPages, get_content)
View(events)
rm(list =ls())
# Upload libraries
library(httr)
library(jsonlite)
library(xml2)
library(dplyr)
library(rlist)
# Create API elements -----------------------------------------------------
url <- "https://app.ticketmaster.com/discovery/v2/events"
apikey <- "?apikey=NqcnLGc44dacGS0uZClA8U3L5Gj3OnEs"
SheffieldCityCentre <- "&latlong=53.3812013,-1.4723287"
radius <- "&radius=20&unit=km"
source <- "&source=ticketmaster"
dates <- "&startDateTime=2019-03-29T10:59:00Z&endDateTime=2019-12-31T11:00:00Z"
page <- "&page="
# Create functions --------------------------------------------------------
# count total number of pages
apicontent <- GET(paste0(url, apikey, SheffieldCityCentre, radius, source, dates)) %>%
content()
totalPages <- apicontent$page$totalPages
# function that loops through pages getting a list of all elements
get_content <- function(page_number) {
events_on_page <- GET(paste0(url, apikey, SheffieldCityCentre, radius, source, dates, page, page_number)) %>% content()
}
# list of list for all events from all pages
events <- lapply(1:totalPages, get_content)
View(events)
events[[1]]$`_embedded`$events[[1]]$name
events_list <- list()
dates_list <- list()
times_list <- list()
genres_list <- list()
minprices_list <- list()
j <- 1
all_events_list <- list()
all_dates_list <- list()
all_times_list <- list()
all_genres_list <- list()
all_minprices_list <- list()
while (j < 11) {
for (i in 1:20) {
# get names
event_name <- paste0('name:', i)
name <- list(events[[j]]$`_embedded`$events[[i]]$name)
events_list[[event_name]] <- name
# get dates
date_name <- paste0('name:', i)
dates <- list(events[[j]]$`_embedded`$events[[i]]$dates$start$localDate)
dates_list[[date_name]] <- dates
# get time
time_name <- paste0('name:', i)
times <- list(events[[j]]$`_embedded`$events[[i]]$dates$start$localTime)
times_list[[time_name]] <- times
# get genre
genre_name <- paste0('name:', i)
genres <- list(events[[j]]$`_embedded`$events[[i]]$classifications[[1]]$genre$name)
genres_list[[genre_name]] <- genres
# get standard minimum price
minprice_name <- paste0('name:', i)
minprices <- list(events[[j]]$`_embedded`$events[[i]]$priceRanges[[1]]$min)
minprices_list[[minprice_name]] <- minprices
}
all_events_list[[j]] <- unlist(events_list, recursive = FALSE, use.names = FALSE)
all_dates_list[[j]] <- unlist(dates_list, recursive = FALSE, use.names = FALSE)
all_times_list[[j]] <- unlist(times_list, recursive = FALSE, use.names = FALSE)
all_genres_list[[j]] <- unlist(genres_list, recursive = FALSE, use.names = FALSE)
all_minprices_list[[j]] <- unlist(minprices_list, recursive = FALSE, use.names = FALSE)
j = j + 1
}
events_final <- unlist(all_events_list, recursive = FALSE, use.names = FALSE)
dates_final <- unlist(all_dates_list, recursive = FALSE, use.names = FALSE)
times_final <- unlist(all_times_list, recursive = FALSE, use.names = FALSE)
genres_final <- unlist(all_genres_list, recursive = FALSE, use.names = FALSE)
minprices_final <- unlist(all_minprices_list, recursive = FALSE, use.names = FALSE)
data <- do.call(rbind, Map(data.frame,
"Event Name" = events_final,
"Date" = dates_final,
"Time" = times_final,
"Genre" = genres_final,
"Minimum Price" = minprices_final))
data <- do.call(rbind, Map(data.frame,
"Event Name" = events_final,
"Date" = dates_final,
"Time" = times_final,
"Genre" = genres_final,
"Minimum Price" = minprices_final))
View(minprices_final)
rm(name, dates, times, genres, minprices)
data <- do.call(rbind, Map(data.frame,
"Event Name" = events_final,
"Date" = dates_final,
"Time" = times_final,
"Genre" = genres_final,
"Minimum Price" = minprices_final))
?rbind
?rbindlist
data <- do.call(rbind_list, Map(data.frame,
"Event Name" = events_final,
"Date" = dates_final,
"Time" = times_final,
"Genre" = genres_final,
"Minimum Price" = minprices_final))
data <- do.call(rbind_list(fill=TRUE), Map(data.frame,
"Event Name" = events_final,
"Date" = dates_final,
"Time" = times_final,
"Genre" = genres_final,
"Minimum Price" = minprices_final))
data <- do.call(rbind_list(fill=TRUE, use.names = TRUE), Map(data.frame,
"Event Name" = events_final,
"Date" = dates_final,
"Time" = times_final,
"Genre" = genres_final,
"Minimum Price" = minprices_final))
install.packages("tidyverse")
library(tidyverse)
?map2_df
?map2_dfr
dat <- map2_dfr(events_final,
dates_final,
times_final,
genres_final,
minprices_final, ~data_frame())
dat <- map2_dfr(events_final,
dates_final,
times_final,
genres_final,
minprices_final, ~data_frame(V1 = .x, V2 = .y))
dat <- map2_df(events_final,
dates_final,
times_final,
genres_final,
minprices_final, ~data_frame())
dat <- map2_dfc(events_final,
dates_final,
times_final,
genres_final,
minprices_final, ex_fun)
data <- do.call(rbind_list, Map(data.frame,
"Event Name" = events_final,
"Date" = dates_final,
"Time" = times_final,
"Genre" = genres_final,
"Minimum Price" = minprices_final))
data <- do.call(bind_rows, Map(data.frame,
"Event Name" = events_final,
"Date" = dates_final,
"Time" = times_final,
"Genre" = genres_final,
"Minimum Price" = minprices_final))
View(events_list)
View(events_final)
View(genres_final)
View(dates_final)
View(times_final)
View(minprices_final)
?bind_rows
data <- do.call(bind_rows(.id = 1), Map(data.frame,
"Event Name" = events_final,
"Date" = dates_final,
"Time" = times_final,
"Genre" = genres_final,
"Minimum Price" = minprices_final))
ifelse(is.null(minprices_final),NA,minprices_final))))))
ifelse(is.null(minprices_final),NA,minprices_final)
View(minprices_final)
minprices_final[is.na(minprices_final)] <- 0
View(minprices_final)
is.na(minprices_final)
minprices_final
which(is.na(minprices_final))
is.na(minprices_final)
minprices_final
which(minprices_final==NULL)
which(minprices_final[]==NULL)
is.null(minprices_final[[17]])
is.null(minprices_final[[18]])
is.null(minprices_final[[17]])
while (i < 180) {
is.null(minprices_final[[i]])
minprices_final[[i]] <- 0
}
minprices_final[[17]]
minprices_final[[18]]
while (i < 180) {
minprices_final1 <- if_else(is.null(minprices_final[[i]]), 0, minprices_final[[i]])
}
minprices_final1 <- lapply(1:180, if_else(is.null(minprices_final[[i]]), 0, minprices_final[[i]]))
if_else(is.null(minprices_final[[i]]), 0, minprices_final[[i]])
if_else(is.null(minprices_final[[1]]), 0, minprices_final[[i]])
if_else(is.null(minprices_final[[17]]), 0, minprices_final[[17]])
if_else(is.null(minprices_final[[18]]), 0, minprices_final[[18]])
while (i < 180) {
minprices_final1[[i]] <- if_else(is.null(minprices_final[[i]]), 0, minprices_final[[i]])
i = i + 1
}
minprices_final1[[1]]
minprices_final1[[2]]
minprices_final1 <- lapply(1:180, if_else(is.null(minprices_final[[i]]), 0, minprices_final[[i]]))
while (j < 11) {
for (i in 1:20) {
# get names
event_name <- paste0('name:', i)
name <- list(events[[j]]$`_embedded`$events[[i]]$name)
events_list[[event_name]] <- name
# get dates
date_name <- paste0('name:', i)
dates <- list(events[[j]]$`_embedded`$events[[i]]$dates$start$localDate)
dates_list[[date_name]] <- dates
# get time
time_name <- paste0('name:', i)
times <- list(events[[j]]$`_embedded`$events[[i]]$dates$start$localTime)
times_list[[time_name]] <- times
# get genre
genre_name <- paste0('name:', i)
genres <- list(events[[j]]$`_embedded`$events[[i]]$classifications[[1]]$genre$name)
genres_list[[genre_name]] <- genres
# get standard minimum price
minprice_name <- paste0('name:', i)
minprices <- list(if_else(is.na(events[[j]]$`_embedded`$events[[i]]$priceRanges[[1]]$min), 0, events[[j]]$`_embedded`$events[[i]]$priceRanges[[1]]$min) )
minprices_list[[minprice_name]] <- minprices
}
all_events_list[[j]] <- unlist(events_list, recursive = FALSE, use.names = FALSE)
all_dates_list[[j]] <- unlist(dates_list, recursive = FALSE, use.names = FALSE)
all_times_list[[j]] <- unlist(times_list, recursive = FALSE, use.names = FALSE)
all_genres_list[[j]] <- unlist(genres_list, recursive = FALSE, use.names = FALSE)
all_minprices_list[[j]] <- unlist(minprices_list, recursive = FALSE, use.names = FALSE)
j = j + 1
}
# get all data from the api content
events_list <- list()
dates_list <- list()
times_list <- list()
genres_list <- list()
minprices_list <- list()
j <- 1
all_events_list <- list()
all_dates_list <- list()
all_times_list <- list()
all_genres_list <- list()
all_minprices_list <- list()
while (j < 11) {
for (i in 1:20) {
# get names
event_name <- paste0('name:', i)
name <- list(events[[j]]$`_embedded`$events[[i]]$name)
events_list[[event_name]] <- name
# get dates
date_name <- paste0('name:', i)
dates <- list(events[[j]]$`_embedded`$events[[i]]$dates$start$localDate)
dates_list[[date_name]] <- dates
# get time
time_name <- paste0('name:', i)
times <- list(events[[j]]$`_embedded`$events[[i]]$dates$start$localTime)
times_list[[time_name]] <- times
# get genre
genre_name <- paste0('name:', i)
genres <- list(events[[j]]$`_embedded`$events[[i]]$classifications[[1]]$genre$name)
genres_list[[genre_name]] <- genres
# get standard minimum price
minprice_name <- paste0('name:', i)
minprices <- list(events[[j]]$`_embedded`$events[[i]]$priceRanges[[1]]$min)
minprices_list[[minprice_name]] <- if_else(is.null(minprices), 0, minprices)
}
all_events_list[[j]] <- unlist(events_list, recursive = FALSE, use.names = FALSE)
all_dates_list[[j]] <- unlist(dates_list, recursive = FALSE, use.names = FALSE)
all_times_list[[j]] <- unlist(times_list, recursive = FALSE, use.names = FALSE)
all_genres_list[[j]] <- unlist(genres_list, recursive = FALSE, use.names = FALSE)
all_minprices_list[[j]] <- unlist(minprices_list, recursive = FALSE, use.names = FALSE)
j = j + 1
}
# get all data from the api content
events_list <- list()
dates_list <- list()
times_list <- list()
genres_list <- list()
minprices_list <- list()
j <- 1
all_events_list <- list()
all_dates_list <- list()
all_times_list <- list()
all_genres_list <- list()
all_minprices_list <- list()
while (j < 11) {
for (i in 1:20) {
# get names
event_name <- paste0('name:', i)
name <- list(events[[j]]$`_embedded`$events[[i]]$name)
events_list[[event_name]] <- name
# get dates
date_name <- paste0('name:', i)
dates <- list(events[[j]]$`_embedded`$events[[i]]$dates$start$localDate)
dates_list[[date_name]] <- dates
# get time
time_name <- paste0('name:', i)
times <- list(events[[j]]$`_embedded`$events[[i]]$dates$start$localTime)
times_list[[time_name]] <- times
# get genre
genre_name <- paste0('name:', i)
genres <- list(events[[j]]$`_embedded`$events[[i]]$classifications[[1]]$genre$name)
genres_list[[genre_name]] <- genres
# get standard minimum price
minprice_name <- paste0('name:', i)
minprices <- list(if_else(is.null(events[[j]]$`_embedded`$events[[i]]$priceRanges[[1]]$min), 0, events[[j]]$`_embedded`$events[[i]]$priceRanges[[1]]$min) )
minprices_list[[minprice_name]] <- minprices
}
all_events_list[[j]] <- unlist(events_list, recursive = FALSE, use.names = FALSE)
all_dates_list[[j]] <- unlist(dates_list, recursive = FALSE, use.names = FALSE)
all_times_list[[j]] <- unlist(times_list, recursive = FALSE, use.names = FALSE)
all_genres_list[[j]] <- unlist(genres_list, recursive = FALSE, use.names = FALSE)
all_minprices_list[[j]] <- unlist(minprices_list, recursive = FALSE, use.names = FALSE)
j = j + 1
}
while (j < 11) {
for (i in 1:20) {
# get names
event_name <- paste0('name:', i)
name <- list(events[[j]]$`_embedded`$events[[i]]$name)
events_list[[event_name]] <- name
# get dates
date_name <- paste0('name:', i)
dates <- list(events[[j]]$`_embedded`$events[[i]]$dates$start$localDate)
dates_list[[date_name]] <- dates
# get time
time_name <- paste0('name:', i)
times <- list(events[[j]]$`_embedded`$events[[i]]$dates$start$localTime)
times_list[[time_name]] <- times
# get genre
genre_name <- paste0('name:', i)
genres <- list(events[[j]]$`_embedded`$events[[i]]$classifications[[1]]$genre$name)
genres_list[[genre_name]] <- genres
# get standard minimum price
minprice_name <- paste0('name:', i)
minprices <- list(events[[j]]$`_embedded`$events[[i]]$priceRanges[[1]]$min)
minprices_list[[minprice_name]] <- minprices
}
all_events_list[[j]] <- unlist(events_list, recursive = FALSE, use.names = FALSE)
all_dates_list[[j]] <- unlist(dates_list, recursive = FALSE, use.names = FALSE)
all_times_list[[j]] <- unlist(times_list, recursive = FALSE, use.names = FALSE)
all_genres_list[[j]] <- unlist(genres_list, recursive = FALSE, use.names = FALSE)
all_minprices_list[[j]] <- unlist(minprices_list, recursive = FALSE, use.names = FALSE)
j = j + 1
}
rm(list=ls())
library(httr)
library(jsonlite)
library(xml2)
library(dplyr)
library(rlist)
library(tidyverse)
# Create API elements -----------------------------------------------------
url <- "https://app.ticketmaster.com/discovery/v2/events"
apikey <- "?apikey=NqcnLGc44dacGS0uZClA8U3L5Gj3OnEs"
SheffieldCityCentre <- "&latlong=53.3812013,-1.4723287"
radius <- "&radius=20&unit=km"
source <- "&source=ticketmaster"
dates <- "&startDateTime=2019-03-29T10:59:00Z&endDateTime=2019-12-31T11:00:00Z"
page <- "&page="
# Create functions --------------------------------------------------------
# count total number of pages
apicontent <- GET(paste0(url, apikey, SheffieldCityCentre, radius, source, dates)) %>%
content()
totalPages <- apicontent$page$totalPages
# function that loops through pages getting a list of all elements
get_content <- function(page_number) {
events_on_page <- GET(paste0(url, apikey, SheffieldCityCentre, radius, source, dates, page, page_number)) %>% content()
}
# list of list for all events from all pages
events <- lapply(1:totalPages, get_content)
# get all data from the api content
events_list <- list()
dates_list <- list()
times_list <- list()
genres_list <- list()
minprices_list <- list()
j <- 1
all_events_list <- list()
all_dates_list <- list()
all_times_list <- list()
all_genres_list <- list()
all_minprices_list <- list()
while (j < 11) {
for (i in 1:20) {
# get names
event_name <- paste0('name:', i)
name <- list(events[[j]]$`_embedded`$events[[i]]$name)
events_list[[event_name]] <- name
# get dates
date_name <- paste0('name:', i)
dates <- list(events[[j]]$`_embedded`$events[[i]]$dates$start$localDate)
dates_list[[date_name]] <- dates
# get time
time_name <- paste0('name:', i)
times <- list(events[[j]]$`_embedded`$events[[i]]$dates$start$localTime)
times_list[[time_name]] <- times
# get genre
genre_name <- paste0('name:', i)
genres <- list(events[[j]]$`_embedded`$events[[i]]$classifications[[1]]$genre$name)
genres_list[[genre_name]] <- genres
# get standard minimum price
minprice_name <- paste0('name:', i)
minprices <- list(events[[j]]$`_embedded`$events[[i]]$priceRanges[[1]]$min)
minprices_list[[minprice_name]] <- minprices
}
all_events_list[[j]] <- unlist(events_list, recursive = FALSE, use.names = FALSE)
all_dates_list[[j]] <- unlist(dates_list, recursive = FALSE, use.names = FALSE)
all_times_list[[j]] <- unlist(times_list, recursive = FALSE, use.names = FALSE)
all_genres_list[[j]] <- unlist(genres_list, recursive = FALSE, use.names = FALSE)
all_minprices_list[[j]] <- unlist(minprices_list, recursive = FALSE, use.names = FALSE)
j = j + 1
}
rm(list=ls())
library(httr)
library(jsonlite)
library(xml2)
library(dplyr)
library(rlist)
library(tidyverse)
# Create API elements -----------------------------------------------------
url <- "https://app.ticketmaster.com/discovery/v2/events"
apikey <- "?apikey=NqcnLGc44dacGS0uZClA8U3L5Gj3OnEs"
SheffieldCityCentre <- "&latlong=53.3812013,-1.4723287"
radius <- "&radius=20&unit=km"
source <- "&source=ticketmaster"
dates <- "&startDateTime=2019-03-29T10:59:00Z&endDateTime=2019-12-31T11:00:00Z"
page <- "&page="
# Create functions --------------------------------------------------------
# count total number of pages
apicontent <- GET(paste0(url, apikey, SheffieldCityCentre, radius, source, dates)) %>%
content()
totalPages <- apicontent$page$totalPages
# function that loops through pages getting a list of all elements
get_content <- function(page_number) {
events_on_page <- GET(paste0(url, apikey, SheffieldCityCentre, radius, source, dates, page, page_number)) %>% content()
}
# list of list for all events from all pages
events <- lapply(1:totalPages, get_content)
# get all data from the api content
events_list <- list()
dates_list <- list()
times_list <- list()
genres_list <- list()
minprices_list <- list()
j <- 1
all_events_list <- list()
all_dates_list <- list()
all_times_list <- list()
all_genres_list <- list()
all_minprices_list <- list()
while (j < 11) {
for (i in 1:20) {
# get names
event_name <- paste0('name:', i)
name <- list(events[[j]]$`_embedded`$events[[i]]$name)
events_list[[event_name]] <- name
# get dates
date_name <- paste0('name:', i)
dates <- list(events[[j]]$`_embedded`$events[[i]]$dates$start$localDate)
dates_list[[date_name]] <- dates
# get time
time_name <- paste0('name:', i)
times <- list(events[[j]]$`_embedded`$events[[i]]$dates$start$localTime)
times_list[[time_name]] <- times
# get genre
genre_name <- paste0('name:', i)
genres <- list(events[[j]]$`_embedded`$events[[i]]$classifications[[1]]$genre$name)
genres_list[[genre_name]] <- genres
# get standard minimum price
minprice_name <- paste0('name:', i)
minprices <- list(events[[j]]$`_embedded`$events[[i]]$priceRanges[[1]]$min)
minprices_list[[minprice_name]] <- minprices
}
all_events_list[[j]] <- unlist(events_list, recursive = FALSE, use.names = FALSE)
all_dates_list[[j]] <- unlist(dates_list, recursive = FALSE, use.names = FALSE)
all_times_list[[j]] <- unlist(times_list, recursive = FALSE, use.names = FALSE)
all_genres_list[[j]] <- unlist(genres_list, recursive = FALSE, use.names = FALSE)
all_minprices_list[[j]] <- unlist(minprices_list, recursive = FALSE, use.names = FALSE)
j = j + 1
}
View(events)
rm(list =ls())
library(httr)
library(jsonlite)
library(xml2)
library(dplyr)
library(rlist)
library(tidyverse)
# Create API elements -----------------------------------------------------
url <- "https://app.ticketmaster.com/discovery/v2/events"
apikey <- "?apikey=NqcnLGc44dacGS0uZClA8U3L5Gj3OnEs"
SheffieldCityCentre <- "&latlong=53.3812013,-1.4723287"
radius <- "&radius=20&unit=km"
source <- "&source=ticketmaster"
dates <- "&startDateTime=2019-03-29T10:59:00Z&endDateTime=2019-12-31T11:00:00Z"
page <- "&page="
apicontent <- GET(paste0(url, apikey, SheffieldCityCentre, radius, source, dates)) %>%
content()
totalPages <- apicontent$page$totalPages
# function that loops through pages getting a list of all elements
get_content <- function(page_number) {
events_on_page <- GET(paste0(url, apikey, SheffieldCityCentre, radius, source, dates, page, page_number)) %>% content()
}
# list of list for all events from all pages
events <- lapply(1:totalPages, get_content)
View(events)
events[[1]][["fault"]][["faultstring"]]
rm(list=ls())
