library(jsonlite)
sk_api_key <- "OdCeFTr8qFUSwUVt"
sk_venue_query_url <- paste("https://api.songkick.com/api/3.0/venues/", songkick_venue_id,
".json?apikey=", sk_api_key, sep="")
sk_json <- fromJSON(sk_venue_query_url)
venueCapacity <- sk_json[["resultsPage"]][["results"]][["venue"]][["capacity"]]
venueLat <- sk_json[["resultsPage"]][["results"]][["venue"]][["lat"]]
venueLng <- sk_json[["resultsPage"]][["results"]][["venue"]][["lng"]]
return (cbind(songkick_venue_id, venueCapacity, venueLat, venueLng))
}
this <- data_frame_via_lapply(songkick_venues, songkick_venue_id_retrieve)
venues_list <- lapply(songkick_venues, songkick_venue_id_retrieve)
View(venues_list)
library(httr)
library(jsonlite)
# import spotify dataset
spotify <- read.csv("Excel/spotify.csv")
# isolate last 6 months (last 26 weeks of 200 chart positions)
#spotify_last6mo <- tail(spotify, 26*200)
spotify_2018 <- spotify[substr(spotify$Week,1,4) == "2018", ]
#spotify_data <- spotify_last6mo
spotify_data <- spotify_2018
# aggregate total plays per artists
artist_plays <- aggregate(spotify_data$Plays, by=list(Artist=spotify_data$Artist), FUN=sum)
# sort list and keep top 20
top_20 <- head(artist_plays[order(artist_plays$x, decreasing=TRUE),], 20)
rownames(top_20) <- 1:20
colnames(top_20) <- c("Artist","Total Plays")
# sapply to get songkick IDs (RUN FUNCTIONS IN functions.R)
top_20$'Songkick ID' <- sapply(as.character(top_20$Artist), artist_name_to_songkick_id)
top_20_artists_event_data_list <- lapply(as.character(top_20$'Songkick ID'), songkick_artist_id_to_event_data)
artist_name_to_songkick_id <- function(artist_name){
library(jsonlite)
sk_api_key <- "OdCeFTr8qFUSwUVt"
sk_query_url <- paste ("https://api.songkick.com/api/3.0/search/artists.json?apikey=", sk_api_key,
"&query=", URLencode(artist_name), sep="")
sk_json <- fromJSON(sk_query_url)
# Pause to avoid 503 error on loop
Sys.sleep(0.5)
result <- as.character(sk_json[['resultsPage']][['results']][['artist']][['id']][1])
return(result)
}
songkick_artist_id_to_event_data <- function(sk_artist_id) {
sk_artist_id <- artist_name_to_songkick_id("Eminem")
library(jsonlite)
# Build query URL and execute
sk_api_key <- "OdCeFTr8qFUSwUVt"
sk_query_url <- paste("https://api.songkick.com/api/3.0/artists/", sk_artist_id,
"/gigography.json?apikey=", sk_api_key, sep="")
sk_json <- fromJSON(sk_query_url)
# extract Event IDs
eventIDs <- as.character(sk_json[["resultsPage"]][["results"]][["event"]][["id"]])
venueIDs <- as.character(sk_json[["resultsPage"]][["results"]][["event"]][["venue"]][["id"]])
eventDates <- sk_json[["resultsPage"]][["results"]][["event"]][["start"]][["date"]]
eventCities <- sk_json[["resultsPage"]][["results"]][["event"]][["location"]][["city"]]
eventLngs <- as.double(sk_json[["resultsPage"]][["results"]][["event"]][["location"]][["lng"]])
eventLats <- as.double(sk_json[["resultsPage"]][["results"]][["event"]][["location"]][["lat"]])
# repeat on further pages (if any)
totalPages <- ceiling(sk_json[["resultsPage"]][['totalEntries']] / sk_json[["resultsPage"]][['perPage']])
if (totalPages > 1) {
pageNums <- 2:totalPages
for (pageNum in pageNums) {
sk_query_url <- paste(sk_query_url,"&page=",pageNum,sep="")
sk_json <- fromJSON(sk_query_url)
eventIDs <- append(eventIDs, as.character(sk_json[["resultsPage"]][["results"]][["event"]][["id"]]))
venueIDs <- append(venueIDs, as.character(sk_json[["resultsPage"]][["results"]][["event"]][["venue"]][["id"]]))
eventDates <- append(eventDates, sk_json[["resultsPage"]][["results"]][["event"]][["start"]][["date"]])
eventCities <- append(eventCities, sk_json[["resultsPage"]][["results"]][["event"]][["location"]][["city"]])
eventLngs <- append(eventLngs, as.double(sk_json[["resultsPage"]][["results"]][["event"]][["location"]][["lng"]]))
eventLats <- append(eventLats, as.double(sk_json[["resultsPage"]][["results"]][["event"]][["location"]][["lat"]]))
}
}
return (cbind(sk_artist_id, eventIDs, venueIDs, eventDates, eventCities, eventLngs, eventLats))
}
songkick_venue_id_retrieve <- function(songkick_venue_id) {
library(jsonlite)
sk_api_key <- "OdCeFTr8qFUSwUVt"
sk_venue_query_url <- paste("https://api.songkick.com/api/3.0/venues/", songkick_venue_id,
".json?apikey=", sk_api_key, sep="")
sk_json <- fromJSON(sk_venue_query_url)
venueCapacity <- sk_json[["resultsPage"]][["results"]][["venue"]][["capacity"]]
venueLat <- sk_json[["resultsPage"]][["results"]][["venue"]][["lat"]]
venueLng <- sk_json[["resultsPage"]][["results"]][["venue"]][["lng"]]
return (cbind(songkick_venue_id, venueCapacity, venueLat, venueLng))
}
top_20_artists_event_data_list <- lapply(as.character(top_20$'Songkick ID'), songkick_artist_id_to_event_data)
# sapply to get songkick IDs (RUN FUNCTIONS IN functions.R)
top_20$'Songkick ID' <- sapply(as.character(top_20$Artist), artist_name_to_songkick_id)
top_20_artists_event_data_list <- lapply(as.character(top_20$'Songkick ID'), songkick_artist_id_to_event_data)
top_20_artists_event_data_df <- as.data.frame(do.call(rbind, top_20_artists_event_data_list))
View(top_20_artists_event_data_df)
songkick_venues <- unique(na.omit(as.character(top_20_artists_event_data_df$venueIDs)),incomparables=FALSE)
venues_list <- lapply(songkick_venues, songkick_venue_id_retrieve)
View(venues_list)
songkick_venue_id_retrieve(6239)
songkick_venue_id_retrieve("6239")
songkick_venue_id_retrieve <- function(songkick_venue_id) {
library(jsonlite)
sk_api_key <- "OdCeFTr8qFUSwUVt"
sk_venue_query_url <- paste("https://api.songkick.com/api/3.0/venues/", songkick_venue_id,
".json?apikey=", sk_api_key, sep="")
sk_json <- fromJSON(sk_venue_query_url)
venueCapacity <- as.integer(sk_json[["resultsPage"]][["results"]][["venue"]][["capacity"]])
venueLat <- as.double(sk_json[["resultsPage"]][["results"]][["venue"]][["lat"]])
venueLng <- as.double(sk_json[["resultsPage"]][["results"]][["venue"]][["lng"]])
return (cbind(songkick_venue_id, venueCapacity, venueLat, venueLng))
}
songkick_venue_id_retrieve("6239")
songkick_venue_id_retrieve(6239
songkick_venue_id_retrieve(6239)
songkick_venue_id_retrieve(6239)
songkick_venue_id_retrieve <- function(songkick_venue_id) {
library(jsonlite)
sk_api_key <- "OdCeFTr8qFUSwUVt"
sk_venue_query_url <- paste("https://api.songkick.com/api/3.0/venues/", songkick_venue_id,
".json?apikey=", sk_api_key, sep="")
sk_json <- fromJSON(sk_venue_query_url)
venueCapacity <- as.integer(sk_json[["resultsPage"]][["results"]][["venue"]][["capacity"]])
venueLat <- as.double(sk_json[["resultsPage"]][["results"]][["venue"]][["lat"]])
venueLng <- as.double(sk_json[["resultsPage"]][["results"]][["venue"]][["lng"]])
return (cbind(songkick_venue_id, venueCapacity, venueLat, venueLng))
}
songkick_venue_id_retrieve(6239)
songkick_venue_id_retrieve(44350)
songkick_venue_id_retrieve(44350)
songkick_venue_id_retrieve(17546)
View(venues_list)
View(venues_list)
this <- data_frame_via_lapply([6239,44350], songkick_venue_id_retrieve)
venues_list <- lapply(list(6239,44350), songkick_venue_id_retrieve)
View(venues_list)
songkick_venue_id_retrieve <- function(songkick_venue_id) {
library(jsonlite)
sk_api_key <- "OdCeFTr8qFUSwUVt"
sk_venue_query_url <- paste("https://api.songkick.com/api/3.0/venues/", songkick_venue_id,
".json?apikey=", sk_api_key, sep="")
sk_json <- fromJSON(sk_venue_query_url)
venueCapacity <- as.integer(sk_json[["resultsPage"]][["results"]][["venue"]][["capacity"]])
venueLat <- as.double(sk_json[["resultsPage"]][["results"]][["venue"]][["lat"]])
venueLng <- as.double(sk_json[["resultsPage"]][["results"]][["venue"]][["lng"]])
return (songkick_venue_id) #(cbind(songkick_venue_id, venueCapacity, venueLat, venueLng))
}
venues_list <- lapply(list(6239,44350), songkick_venue_id_retrieve)
View(venues_list)
venues_list[[1]]
venues_list[[2]]
#songkick_venue_id_retrieve <- function(songkick_venue_id) {
songkick_venue_id <- 6239
library(jsonlite)
sk_api_key <- "OdCeFTr8qFUSwUVt"
sk_venue_query_url <- paste("https://api.songkick.com/api/3.0/venues/", songkick_venue_id,
".json?apikey=", sk_api_key, sep="")
sk_json <- fromJSON(sk_venue_query_url)
View(sk_json)
venueCapacity <- as.integer(sk_json[["resultsPage"]][["results"]][["venue"]][["capacity"]])
venueLat <- as.double(sk_json[["resultsPage"]][["results"]][["venue"]][["lat"]])
venueLng <- as.double(sk_json[["resultsPage"]][["results"]][["venue"]][["lng"]])
venueCapacity
cbind(songkick_venue_id, venueCapacity, venueLat, venueLng)
songkick_venue_id_retrieve <- function(songkick_venue_id) {
songkick_venue_id <- 6239
library(jsonlite)
sk_api_key <- "OdCeFTr8qFUSwUVt"
sk_venue_query_url <- paste("https://api.songkick.com/api/3.0/venues/", songkick_venue_id,
".json?apikey=", sk_api_key, sep="")
sk_json <- fromJSON(sk_venue_query_url)
venueCapacity <- as.integer(sk_json[["resultsPage"]][["results"]][["venue"]][["capacity"]])
venueLat <- as.double(sk_json[["resultsPage"]][["results"]][["venue"]][["lat"]])
venueLng <- as.double(sk_json[["resultsPage"]][["results"]][["venue"]][["lng"]])
return (songkick_venue_id) #(cbind(songkick_venue_id, venueCapacity, venueLat, venueLng))
}
venues_list <- lapply("6239", songkick_venue_id_retrieve)
View(venues_list)
View(venues_list)
View(venues_list)
View(venues_list)
View(venues_list)
venues_list <- lapply("6239", songkick_venue_id_retrieve)
View(venues_list)
songkick_venue_id_retrieve <- function(songkick_venue_id) {
library(jsonlite)
sk_api_key <- "OdCeFTr8qFUSwUVt"
sk_venue_query_url <- paste("https://api.songkick.com/api/3.0/venues/", songkick_venue_id,
".json?apikey=", sk_api_key, sep="")
sk_json <- fromJSON(sk_venue_query_url)
venueCapacity <- as.integer(sk_json[["resultsPage"]][["results"]][["venue"]][["capacity"]])
venueLat <- as.double(sk_json[["resultsPage"]][["results"]][["venue"]][["lat"]])
venueLng <- as.double(sk_json[["resultsPage"]][["results"]][["venue"]][["lng"]])
return (cbind(songkick_venue_id, venueCapacity, venueLat, venueLng))
}
venues_list <- lapply("6239", songkick_venue_id_retrieve)
View(venues_list)
View(venues_list)
venues_list <- lapply(list(44350, 6239), songkick_venue_id_retrieve)
View(venues_list)
View(venues_list)
venues_data <- as.data.frame(do.call(rbind, venues_list))
venues_data <- as.data.frame(do.call(rbind, venues_list))
songkick_venue_id_retrieve <- function(songkick_venue_id) {
library(jsonlite)
sk_api_key <- "OdCeFTr8qFUSwUVt"
sk_venue_query_url <- paste("https://api.songkick.com/api/3.0/venues/", songkick_venue_id,
".json?apikey=", sk_api_key, sep="")
sk_json <- fromJSON(sk_venue_query_url)
venueCapacity <- as.integer(sk_json[["resultsPage"]][["results"]][["venue"]][["capacity"]])
venueLat <- sk_json[["resultsPage"]][["results"]][["venue"]][["lat"]]
venueLng <- sk_json[["resultsPage"]][["results"]][["venue"]][["lng"]]
return (cbind(songkick_venue_id, venueCapacity, venueLat, venueLng))
}
venues_list <- lapply(list(44350, 6239), songkick_venue_id_retrieve)
venues_data <- as.data.frame(do.call(rbind, venues_list))
View(venues_list)
songkick_venue_id_retrieve <- function(songkick_venue_id) {
library(jsonlite)
sk_api_key <- "OdCeFTr8qFUSwUVt"
sk_venue_query_url <- paste("https://api.songkick.com/api/3.0/venues/", songkick_venue_id,
".json?apikey=", sk_api_key, sep="")
sk_json <- fromJSON(sk_venue_query_url)
venueCapacity <- as.integer(sk_json[["resultsPage"]][["results"]][["venue"]][["capacity"]])
venueLat <- str(sk_json[["resultsPage"]][["results"]][["venue"]][["lat"]])
venueLng <- sk_json[["resultsPage"]][["results"]][["venue"]][["lng"]]
return (cbind(songkick_venue_id, venueCapacity, venueLat, venueLng))
}
venues_list <- lapply(list(44350, 6239), songkick_venue_id_retrieve)
venues_data <- as.data.frame(do.call(rbind, venues_list))
View(venues_list)
View(venues_list)
#songkick_venue_id_retrieve <- function(songkick_venue_id) {
songkick_venue_id <- 44350
library(jsonlite)
sk_api_key <- "OdCeFTr8qFUSwUVt"
sk_venue_query_url <- paste("https://api.songkick.com/api/3.0/venues/", songkick_venue_id,
".json?apikey=", sk_api_key, sep="")
sk_json <- fromJSON(sk_venue_query_url)
venueCapacity <- as.integer(sk_json[["resultsPage"]][["results"]][["venue"]][["capacity"]])
venueLat <- str(sk_json[["resultsPage"]][["results"]][["venue"]][["lat"]])
venueLng <- sk_json[["resultsPage"]][["results"]][["venue"]][["lng"]]
venueLat <- as.double(sk_json[["resultsPage"]][["results"]][["venue"]][["lat"]])
venueLat
venueLat == numeric(0)
logical(0)
venueLat == logical(0)
venueLat == 2
is.null(venueLat)
is.numeric(venueLAt)
is.numeric(venueLat)
venueLat + 1
venueLat <- NULL
VENUELAT
venueLat
View(sk_json)
venueCapacity
venueCapacity == integer(0)
length(venueCapacity)
venueCapacity = 1
length(venueCapacity)
venueCapacity <- as.integer(sk_json[["resultsPage"]][["results"]][["venue"]][["capacity"]])
if(length(venueCapacity) < 1) { venueCapacity = NA }
if(length(venueCapacity) < 1) { venueCapacity = NA }
venueCapacity <- as.integer(sk_json[["resultsPage"]][["results"]][["venue"]][["capacity"]])
is.empty(venueCapacity)
songkick_venue_id_retrieve <- function(songkick_venue_id) {
library(jsonlite)
sk_api_key <- "OdCeFTr8qFUSwUVt"
sk_venue_query_url <- paste("https://api.songkick.com/api/3.0/venues/", songkick_venue_id,
".json?apikey=", sk_api_key, sep="")
sk_json <- fromJSON(sk_venue_query_url)
venueCapacity <- as.integer(sk_json[["resultsPage"]][["results"]][["venue"]][["capacity"]])
if(length(venueCapacity) < 1) { venueCapacity = NA }
venueLat <- as.double(sk_json[["resultsPage"]][["results"]][["venue"]][["lat"]])
if(length(venueLat) < 1) { venueCapacity = NA }
venueLng <- as.double(sk_json[["resultsPage"]][["results"]][["venue"]][["lng"]])
if(length(venueLng) < 1) { venueCapacity = NA }
return (cbind(songkick_venue_id, venueCapacity, venueLat, venueLng))
}
songkick_venue_id_retrieve <- function(songkick_venue_id) {
library(jsonlite)
sk_api_key <- "OdCeFTr8qFUSwUVt"
sk_venue_query_url <- paste("https://api.songkick.com/api/3.0/venues/", songkick_venue_id,
".json?apikey=", sk_api_key, sep="")
sk_json <- fromJSON(sk_venue_query_url)
venueCapacity <- as.integer(sk_json[["resultsPage"]][["results"]][["venue"]][["capacity"]])
if(length(venueCapacity) < 1) { venueCapacity = NA }
venueLat <- as.double(sk_json[["resultsPage"]][["results"]][["venue"]][["lat"]])
if(length(venueLat) < 1) { venueCapacity = NA }
venueLng <- as.double(sk_json[["resultsPage"]][["results"]][["venue"]][["lng"]])
if(length(venueLng) < 1) { venueCapacity = NA }
return (cbind(songkick_venue_id, venueCapacity, venueLat, venueLng))
}
venues_list <- lapply(list(44350, 6239), songkick_venue_id_retrieve)
View(venues_list)
View(venues_list)
songkick_venue_id_retrieve <- function(songkick_venue_id) {
library(jsonlite)
sk_api_key <- "OdCeFTr8qFUSwUVt"
sk_venue_query_url <- paste("https://api.songkick.com/api/3.0/venues/", songkick_venue_id,
".json?apikey=", sk_api_key, sep="")
sk_json <- fromJSON(sk_venue_query_url)
venueCapacity <- as.integer(sk_json[["resultsPage"]][["results"]][["venue"]][["capacity"]])
if(length(venueCapacity) < 1) { venueCapacity = NA }
venueLat <- as.double(sk_json[["resultsPage"]][["results"]][["venue"]][["lat"]])
if(length(venueLat) < 1) { venueLat = NA }
venueLng <- as.double(sk_json[["resultsPage"]][["results"]][["venue"]][["lng"]])
if(length(venueLng) < 1) { venueLng = NA }
return (cbind(songkick_venue_id, venueCapacity, venueLat, venueLng))
}
venues_list <- lapply(list(44350, 6239), songkick_venue_id_retrieve)
View(venues_list)
venues_list <- lapply(songkick_venues, songkick_venue_id_retrieve)
View(venues_list)
View(venues_list)
venues_data <- as.data.frame(do.call(rbind, venues_list))
View(venues_data)
data_frame_via_lapply <- function(data, udf) {
results <- lapply(data, udf)
return(as.data.frame(do.call(rbind, results)))
}
venues2 <- data_frame_via_lapply(songkick_venues, songkick_venue_id_retrieve)
View(venues2)
top_20_artists_events_df <- data_frame_via_lapply(as.character(top_20$'Songkick ID'), songkick_artist_id_to_event_data)
venues_list <- unique(na.omit(as.character(top_20_artists_events_df$venueIDs)),incomparables=FALSE)
songkick_venues <- data_frame_via_lapply(venues_list, songkick_venue_id_retrieve)
View(songkick_venues)
View(top_20_artists_events_df)
data_frame_via_lapply <- function(data, udf) {
results <- lapply(data, udf)
return(as.data.frame(do.call(rbind, results)))
}
artist_name_to_songkick_artist_id <- function(artist_name){
library(jsonlite)
sk_api_key <- "OdCeFTr8qFUSwUVt"
sk_query_url <- paste ("https://api.songkick.com/api/3.0/search/artists.json?apikey=", sk_api_key,
"&query=", URLencode(artist_name), sep="")
sk_json <- fromJSON(sk_query_url)
# Pause to avoid 503 error on loop
Sys.sleep(0.5)
result <- as.character(sk_json[['resultsPage']][['results']][['artist']][['id']][1])
return(result)
}
songkick_events_by_artist_id <- function(artistID) {
library(jsonlite)
# Build query URL and execute
sk_api_key <- "OdCeFTr8qFUSwUVt"
sk_query_url <- paste("https://api.songkick.com/api/3.0/artists/", sk_artist_id,
"/gigography.json?apikey=", sk_api_key, sep="")
sk_json <- fromJSON(sk_query_url)
# extract Event IDs
eventID <- as.character(sk_json[["resultsPage"]][["results"]][["event"]][["id"]])
venueID <- as.character(sk_json[["resultsPage"]][["results"]][["event"]][["venue"]][["id"]])
eventDate <- sk_json[["resultsPage"]][["results"]][["event"]][["start"]][["date"]]
eventCity <- sk_json[["resultsPage"]][["results"]][["event"]][["location"]][["city"]]
eventLng <- as.double(sk_json[["resultsPage"]][["results"]][["event"]][["location"]][["lng"]])
eventLat <- as.double(sk_json[["resultsPage"]][["results"]][["event"]][["location"]][["lat"]])
# repeat on further pages (if any)
totalPages <- ceiling(sk_json[["resultsPage"]][['totalEntries']] / sk_json[["resultsPage"]][['perPage']])
if (totalPages > 1) {
pageNums <- 2:totalPages
for (pageNum in pageNums) {
sk_query_url <- paste(sk_query_url,"&page=",pageNum,sep="")
sk_json <- fromJSON(sk_query_url)
eventID <- append(eventID, as.character(sk_json[["resultsPage"]][["results"]][["event"]][["id"]]))
venueID <- append(venueID, as.character(sk_json[["resultsPage"]][["results"]][["event"]][["venue"]][["id"]]))
eventDate <- append(eventDate, sk_json[["resultsPage"]][["results"]][["event"]][["start"]][["date"]])
eventCity <- append(eventCity, sk_json[["resultsPage"]][["results"]][["event"]][["location"]][["city"]])
eventLng <- append(eventLng, as.double(sk_json[["resultsPage"]][["results"]][["event"]][["location"]][["lng"]]))
eventLat <- append(eventLat, as.double(sk_json[["resultsPage"]][["results"]][["event"]][["location"]][["lat"]]))
}
}
return (cbind(artistID, eventID, venueID, eventDate, eventCity, eventLng, eventLat))
}
songkick_venue_retrieve_by_id <- function(venueID) {
library(jsonlite)
sk_api_key <- "OdCeFTr8qFUSwUVt"
sk_venue_query_url <- paste("https://api.songkick.com/api/3.0/venues/", venueID,
".json?apikey=", sk_api_key, sep="")
sk_json <- fromJSON(sk_venue_query_url)
venueCapacity <- as.integer(sk_json[["resultsPage"]][["results"]][["venue"]][["capacity"]])
if(length(venueCapacity) < 1) { venueCapacity = NA }
venueLng <- as.double(sk_json[["resultsPage"]][["results"]][["venue"]][["lng"]])
if(length(venueLng) < 1) { venueLng = NA }
venueLat <- as.double(sk_json[["resultsPage"]][["results"]][["venue"]][["lat"]])
if(length(venueLat) < 1) { venueLat = NA }
return (cbind(venueID, venueCapacity, venueLng, venueLat))
}
# import spotify dataset
spotify <- read.csv("Excel/spotify.csv")
# isolate last 6 months (last 26 weeks of 200 chart positions)
#spotify_last6mo <- tail(spotify, 26*200)
spotify_2018 <- spotify[substr(spotify$Week,1,4) == "2018", ]
#spotify_data <- spotify_last6mo
spotify_data <- spotify_2018
# aggregate total plays per artists
artist_plays <- aggregate(spotify_data$Plays, by=list(Artist=spotify_data$Artist), FUN=sum)
# sort list and keep top 20
top_20 <- head(artist_plays[order(artist_plays$x, decreasing=TRUE),], 20)
rownames(top_20) <- 1:20
colnames(top_20) <- c("Artist","Total Plays")
# sapply to get songkick IDs (RUN FUNCTIONS IN functions.R)
top_20$'Songkick ID' <- sapply(as.character(top_20$Artist), artist_name_to_songkick_artist_id)
write.csv(top_20, "R/artist_data.csv")
top_20_artists_events_df <- data_frame_via_lapply(as.character(top_20$'Songkick ID'), songkick_events_by_artist_id)
songkick_events_by_artist_id <- function(artistID) {
library(jsonlite)
# Build query URL and execute
sk_api_key <- "OdCeFTr8qFUSwUVt"
sk_query_url <- paste("https://api.songkick.com/api/3.0/artists/", artistID,
"/gigography.json?apikey=", sk_api_key, sep="")
sk_json <- fromJSON(sk_query_url)
# extract Event IDs
eventID <- as.character(sk_json[["resultsPage"]][["results"]][["event"]][["id"]])
venueID <- as.character(sk_json[["resultsPage"]][["results"]][["event"]][["venue"]][["id"]])
eventDate <- sk_json[["resultsPage"]][["results"]][["event"]][["start"]][["date"]]
eventCity <- sk_json[["resultsPage"]][["results"]][["event"]][["location"]][["city"]]
eventLng <- as.double(sk_json[["resultsPage"]][["results"]][["event"]][["location"]][["lng"]])
eventLat <- as.double(sk_json[["resultsPage"]][["results"]][["event"]][["location"]][["lat"]])
# repeat on further pages (if any)
totalPages <- ceiling(sk_json[["resultsPage"]][['totalEntries']] / sk_json[["resultsPage"]][['perPage']])
if (totalPages > 1) {
pageNums <- 2:totalPages
for (pageNum in pageNums) {
sk_query_url <- paste(sk_query_url,"&page=",pageNum,sep="")
sk_json <- fromJSON(sk_query_url)
eventID <- append(eventID, as.character(sk_json[["resultsPage"]][["results"]][["event"]][["id"]]))
venueID <- append(venueID, as.character(sk_json[["resultsPage"]][["results"]][["event"]][["venue"]][["id"]]))
eventDate <- append(eventDate, sk_json[["resultsPage"]][["results"]][["event"]][["start"]][["date"]])
eventCity <- append(eventCity, sk_json[["resultsPage"]][["results"]][["event"]][["location"]][["city"]])
eventLng <- append(eventLng, as.double(sk_json[["resultsPage"]][["results"]][["event"]][["location"]][["lng"]]))
eventLat <- append(eventLat, as.double(sk_json[["resultsPage"]][["results"]][["event"]][["location"]][["lat"]]))
}
}
return (cbind(artistID, eventID, venueID, eventDate, eventCity, eventLng, eventLat))
}
top_20_artists_events_df <- data_frame_via_lapply(as.character(top_20$'Songkick ID'), songkick_events_by_artist_id)
View(top_20_artists_events_df)
venues_list <- unique(na.omit(as.character(top_20_artists_events_df$venueIDs)),incomparables=FALSE)
songkick_venues <- data_frame_via_lapply(venues_list, songkick_venue_id_retrieve)
songkick_venues <- data_frame_via_lapply(venues_list, songkick_venue_retrieve_by_id)
View(songkick_venues)
venues_list <- unique(na.omit(as.character(top_20_artists_events_df$venueIDs)),incomparables=FALSE)
songkick_venues <- data_frame_via_lapply(venues_list, songkick_venue_retrieve_by_id)
songkick_venue_retrieve_by_id <- function(venueID) {
library(jsonlite)
sk_api_key <- "OdCeFTr8qFUSwUVt"
sk_venue_query_url <- paste("https://api.songkick.com/api/3.0/venues/", venueID,
".json?apikey=", sk_api_key, sep="")
sk_json <- fromJSON(sk_venue_query_url)
venueCapacity <- as.integer(sk_json[["resultsPage"]][["results"]][["venue"]][["capacity"]])
if(length(venueCapacity) < 1) { venueCapacity = NA }
venueLng <- as.double(sk_json[["resultsPage"]][["results"]][["venue"]][["lng"]])
if(length(venueLng) < 1) { venueLng = NA }
venueLat <- as.double(sk_json[["resultsPage"]][["results"]][["venue"]][["lat"]])
if(length(venueLat) < 1) { venueLat = NA }
return (cbind(venueID, venueCapacity, venueLng, venueLat))
}
venues_list <- unique(na.omit(as.character(top_20_artists_events_df$venueIDs)),incomparables=FALSE)
View(top_20_artists_events_df)
venues_list <- unique(na.omit(as.character(top_20_artists_events_df$venueID)),incomparables=FALSE)
songkick_venues <- data_frame_via_lapply(venues_list, songkick_venue_retrieve_by_id)
View(songkick_venues)
venues_data <- as.data.frame(do.call(rbind, songkick_venues))
write.csv(top_20_artists_events_df, "R/artist_events.csv")
write.csv(songkick_venues, "R/songkick_venues.csv")
xml_child(xml_child(xml_child(xml_child(xml_child(xml_child(that, 1), 1), 155), 1), 3), 3)
library(jsonlite)
fromJSON("https://en.wikipedia.org/w/api.php?action=parse&page=List%20of%20music%20venues&format=json")
venues_from_wiki <- fromJSON("https://en.wikipedia.org/w/api.php?action=parse&page=List%20of%20music%20venues&format=json")
this <- venues_from_wiki[["parse"]][["text"]][["*"]]
library(xml2)
source('~/.active-rstudio-document', echo=TRUE)
xml_child(xml_child(xml_child(xml_child(xml_child(xml_child(that, 1), 1), 155), 1), 3), 4)
xml_child(xml_child(xml_child(xml_child(xml_child(xml_child(that, 1), 1), 155), 1), 4), 3)
xml_child(xml_child(xml_child(xml_child(xml_child(xml_child(that, 1), 1), 156), 1), 3), 3)
xml_child(xml_child(xml_child(xml_child(xml_child(xml_child(that, 1), 2), 155), 1), 3), 3)
xml_child(xml_child(xml_child(xml_child(xml_child(xml_child(that, 1), 1), 155), 1), 3), 3)
xml_child(xml_child(xml_child(xml_child(xml_child(xml_child(that, 1), 1), 155), 1), 3), 4)
xml_child(xml_child(xml_child(xml_child(xml_child(that, 1), 1), 155), 1), 3), 4)
xml_child(xml_child(xml_child(xml_child(xml_child(that, 1), 1), 155), 1), 4)
xml_child(xml_child(xml_child(xml_child(xml_child(that, 1), 1), 155), 1), 4)[4]
xml_child(xml_child(xml_child(xml_child(xml_child(that, 1), 1), 155), 1), 4)
xml_child(xml_child(xml_child(xml_child(xml_child(that, 1), 1), 156), 1), 4)
xml_child(xml_child(xml_child(xml_child(xml_child(that, 1), 1), 155), 2), 4)
xml_child(xml_child(xml_child(xml_child(xml_child(that, 1), 1), 155), 1), 4)
xml_child(xml_child(xml_child(xml_child(xml_child(that, 2), 1), 155), 1), 4)
xml_child(xml_child(xml_child(xml_child(xml_child(that, 1), 2), 155), 1), 4)
xml_child(xml_child(xml_child(xml_child(xml_child(that, 1), 1), 155), 1), 4)
xml_child(that, 1)
View(venues_from_wiki)
View(that)
xml_child(xml_child(xml_child(xml_child(xml_child(that, 1), 1), 157), 1), 3)
xml_child(xml_child(xml_child(xml_child(xml_child(that, 1), 1), 156), 1), 3)
xml_child(xml_child(xml_child(xml_child(xml_child(that, 1), 1), 156), 1), 4)
xml_child(xml_child(xml_child(xml_child(xml_child(that, 1), 1), 155), 1), 4)
xml_child(xml_child(xml_child(xml_child(xml_child(that, 1), 1), 154), 1), 4)
xml_child(xml_child(xml_child(xml_child(xml_child(that, 1), 1), 154), 1), 1)
xml_child(xml_child(xml_child(xml_child(xml_child(that, 1), 1), 154), 1), 2)
xml_child(xml_child(xml_child(xml_child(xml_child(that, 1), 1), 153), 1), 2)
xml_child(xml_child(xml_child(xml_child(xml_child(that, 1), 1), 153), 1), 2)
xml_child(xml_child(xml_child(xml_child(xml_child(that, 1), 1), 155), 1), 4)
xml_child(xml_child(xml_child(xml_child(xml_child(that, 1), 1), 156), 1), 4)
xml_child(xml_child(xml_child(xml_child(xml_child(that, 1), 1), 157), 1), 3)
xml_child(xml_child(xml_child(xml_child(that, 1), 1), 157), 1)
xml_child(xml_child(xml_child(xml_child(that, 1), 1), 155), 1)
xml_child(xml_child(xml_child(xml_child(that, 1), 1), 155), 1)[1]
xml_child(xml_child(xml_child(xml_child(that, 1), 1), 155), 1)[2]
xml_child(xml_child(xml_child(xml_child(that, 1), 1), 155), 1)[3]
what <- xml_child(xml_child(xml_child(xml_child(that, 1), 1), 155), 1)
View(what)
xml_child(xml_child(xml_child(xml_child(that, 1), 1), 155), 1)
xml_child(xml_child(xml_child(xml_child(that, 1), 1), 153), 1)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
