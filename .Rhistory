install.packages("rmarkdown")
source('~/.active-rstudio-document', echo=TRUE)
library(httr) ; library(jsonlite)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
View(res)
source('~/.active-rstudio-document', echo=TRUE)
View(res1)
View(res2)
source('C:/Users/Tim/Git/admp/R/musicbrainz_json.R', echo=TRUE)
source('C:/Users/Tim/Git/admp/R/musicbrainz_json.R', echo=TRUE)
source('C:/Users/Tim/Git/admp/R/musicbrainz_json.R', echo=TRUE)
source('C:/Users/Tim/Git/admp/R/musicbrainz_json.R', echo=TRUE)
source('C:/Users/Tim/Git/admp/R/musicbrainz_json.R', echo=TRUE)
View(res1)
source('C:/Users/Tim/Git/admp/R/musicbrainz_json.R', echo=TRUE)
source('C:/Users/Tim/Git/admp/R/musicbrainz_json.R', echo=TRUE)
source('C:/Users/Tim/Git/admp/R/musicbrainz_json.R', echo=TRUE)
View(res1)
source('C:/Users/Tim/Git/admp/R/musicbrainz_json.R', echo=TRUE)
source('C:/Users/Tim/Git/admp/R/musicbrainz_json.R', echo=TRUE)
source('C:/Users/Tim/Git/admp/R/musicbrainz_json.R', echo=TRUE)
source('C:/Users/Tim/Git/admp/R/musicbrainz_json.R', echo=TRUE)
source('C:/Users/Tim/Git/admp/R/musicbrainz_json.R', echo=TRUE)
source('C:/Users/Tim/Git/admp/R/musicbrainz_json.R', echo=TRUE)
source('C:/Users/Tim/Git/admp/R/musicbrainz_json.R', echo=TRUE)
source('C:/Users/Tim/Git/admp/R/musicbrainz_json.R', echo=TRUE)
source('C:/Users/Tim/Git/admp/R/musicbrainz_json.R', echo=TRUE)
View(full_res_with_gid)
source('C:/Users/Tim/Git/admp/R/musicbrainz_json.R', echo=TRUE)
source('C:/Users/Tim/Git/admp/R/musicbrainz_json.R', echo=TRUE)
source('C:/Users/Tim/Git/admp/R/musicbrainz_json.R', echo=TRUE)
install.packages("xml2")
source('C:/Users/Tim/Git/admp/R/musicbrainz_json.R', echo=TRUE)
View(full_res_with_gid)
source('C:/Users/Tim/Git/admp/R/musicbrainz_json.R', echo=TRUE)
source('C:/Users/Tim/Git/admp/R/musicbrainz_json.R', echo=TRUE)
View(full_res_with_gid)
full_res_with_gid
View(full_res_with_gid)
source('C:/Users/Tim/Git/admp/R/musicbrainz_json.R', echo=TRUE)
artist_relations <- full_res_with_gid$relations
View(artist_relations)
View(artist_relations)
artist_relations <- full_res_with_gid$relations$url
View(artist_relations)
source('C:/Users/Tim/Git/admp/R/musicbrainz_json.R', echo=TRUE)
source('C:/Users/Tim/Git/admp/R/musicbrainz_json.R', echo=TRUE)
View(artist_relations)
source('C:/Users/Tim/Git/admp/R/musicbrainz_json.R', echo=TRUE)
artist_relations <- full_res_with_gid$relations$url[full_res_with_gid$type=="youtube"]
artist_relations <- full_res_with_gid$relations$url[full_res_with_gid$type=="youtube"]
View(artist_relations)
artist_relations <- full_res_with_gid$relations$url
View(artist_relations)
artist_relations <- full_res_with_gid$relations[full_res_with_gid$type=="youtube"]$url
artist_relations <- full_res_with_gid$relations[full_res_with_gid$type=="youtube"]
View(artist_relations)
source('C:/Users/Tim/Git/admp/R/musicbrainz_json.R', echo=TRUE)
View(artist_relations)
source('C:/Users/Tim/Git/admp/R/musicbrainz_json.R', echo=TRUE)
View(artist_relations)
source('C:/Users/Tim/Git/admp/R/musicbrainz_json.R', echo=TRUE)
View(artist_relations)
artist_relations <- full_res_with_gid$relations[full_res_with_gid$relations$type=='youtube']
source('C:/Users/Tim/Git/admp/R/musicbrainz_json.R', echo=TRUE)
View(artist_gid)
source('C:/Users/Tim/Git/admp/R/musicbrainz_json.R', echo=TRUE)
artist_relations <- res2$relations$url
View(artist_relations)
artist_relations <- res2$relations$url$resource
artist_relations <- res2$relations$url$resource[res2$relations$type=='youtube']
songkick_url <- res2$relations$url$resource[res2$relations$type=='youtube']
songkick_url <- res2$relations$url$resource[res2$relations$type=='songkick']
source('C:/Users/Tim/Git/admp/R/musicbrainz_json.R', echo=TRUE)
source('C:/Users/Tim/Git/admp/R/musicbrainz_json.R', echo=TRUE)
source('C:/Users/Tim/Git/admp/R/musicbrainz_json.R', echo=TRUE)
source('C:/Users/Tim/Git/admp/R/musicbrainz_json.R', echo=TRUE)
source('C:/Users/Tim/Git/admp/R/musicbrainz_json.R', echo=TRUE)
source('C:/Users/Tim/Git/admp/R/musicbrainz_json.R', echo=TRUE)
source('C:/Users/Tim/Git/admp/R/musicbrainz_json.R', echo=TRUE)
source('C:/Users/Tim/Git/admp/R/musicbrainz_json.R', echo=TRUE)
source('C:/Users/Tim/Git/admp/R/musicbrainz_json.R', echo=TRUE)
source('C:/Users/Tim/Git/admp/R/musicbrainz_json.R', echo=TRUE)
source('C:/Users/Tim/Git/admp/R/musicbrainz_json.R', echo=TRUE)
source('C:/Users/Tim/Git/admp/R/musicbrainz_json.R', echo=TRUE)
source('C:/Users/Tim/Git/admp/R/musicbrainz_json.R', echo=TRUE)
source('C:/Users/Tim/Git/admp/R/musicbrainz_json.R', echo=TRUE)
source('C:/Users/Tim/Git/admp/R/musicbrainz_json.R', echo=TRUE)
source('C:/Users/Tim/Git/admp/R/musicbrainz_json.R', echo=TRUE)
source('C:/Users/Tim/Git/admp/R/musicbrainz_json.R', echo=TRUE)
View(json1)
source('C:/Users/Tim/Git/admp/R/musicbrainz_json.R', echo=TRUE)
source('C:/Users/Tim/Git/admp/R/musicbrainz_json.R', echo=TRUE)
View(json2)
source('C:/Users/Tim/Git/admp/R/musicbrainz_json.R', echo=TRUE)
source('C:/Users/Tim/Git/admp/R/musicbrainz_json.R', echo=TRUE)
source('C:/Users/Tim/Git/admp/R/musicbrainz_json.R', echo=TRUE)
source('C:/Users/Tim/Git/admp/R/musicbrainz_json.R', echo=TRUE)
source('C:/Users/Tim/Git/admp/R/musicbrainz_json.R', echo=TRUE)
source('C:/Users/Tim/Git/admp/R/musicbrainz_json.R', echo=TRUE)
source('C:/Users/Tim/Git/admp/R/musicbrainz_json.R', echo=TRUE)
source('C:/Users/Tim/Git/admp/R/musicbrainz_json.R', echo=TRUE)
source('C:/Users/Tim/Git/admp/R/musicbrainz_json.R', echo=TRUE)
source('C:/Users/Tim/Git/admp/R/musicbrainz_json.R', echo=TRUE)
source('C:/Users/Tim/Git/admp/R/musicbrainz_json.R', echo=TRUE)
source('C:/Users/Tim/Git/admp/R/musicbrainz_json.R', echo=TRUE)
source('C:/Users/Tim/Git/admp/R/musicbrainz_json.R', echo=TRUE)
json2$relations$url
json2$relations$type
source('C:/Users/Tim/Git/admp/R/musicbrainz_json.R', echo=TRUE)
source('C:/Users/Tim/Git/admp/R/musicbrainz_json.R', echo=TRUE)
spotify <- read.csv("C:/Users/Tim/Git/admp/Excel/spotify.csv")
View(spotify)
setwd("C:/Users/Tim/Git/admp")
spotify <- read.csv("Excel/spotify.csv")
View(spotify)
# import spotify dataset
spotify <- read.csv("Excel/spotify.csv")
spotify_last6mo <- tail(spotify, 26*200)
View(spotify_last6mo)
artist_plays <- aggregate(spotify_last6mo$Plays, by=list(Artist=spotify_last6mo$Artist), FUN=sum)
top_20 <- head(artist_plays[order(artist_plays$x, decreasing=TRUE),], 20)
top_20_artists <- top_20[1]
View(top_20_artists)
names(artist_plays)
artist_plays <- aggregate(spotify_last6mo$Plays, by=list(Artist=spotify_last6mo$Artist), FUN=sum)
names(artist_plays)
rownames(artist_plays)
rownames(top_20_artists)
rownames(top_20_artists) <- 1:20
top_20_artists
top_20 <- head(artist_plays[order(artist_plays$x, decreasing=TRUE),], 20)
top_20
artist_plays <- aggregate(spotify_last6mo$Plays, by=list(Artist=spotify_last6mo$Artist), FUN=sum)
artist_plays
rownames(top_20) <- 1:20
top_20
# sort list and keep top 20
top_20 <- head(artist_plays[order(artist_plays$x, decreasing=TRUE),], 20)
rownames(top_20) <- 1:20
top_20_artists <- top_20[1]
get_songkick_id('Ariana Grande')
get_songkick_id <- function(artist_name) {
# build url for musicbrainz api query with artist search
json_url_for_mb_gid <- paste('http://musicbrainz.org/ws/js/artist?limit=1&q=',artist_name,'&inc=url-rels',sep="")
# execute musicbrainz api query
json1 <- head(fromJSON(json_url_for_mb_gid),1)
# retrieve gid from musicbrainz data
mb_gid <- json1$gid
# building url for further musicbrainz api query to include 'relationship' URLs
json_url_for_links <- paste('http://musicbrainz.org/ws/2/artist/', mb_gid, '?inc=url-rels', sep="")
# execute second musicbrainz api query
json2 <- fromJSON(json_url_for_links)
# extract URLs
youtube_url <- json2$relations$url$resource[json2$relations$type=='youtube']
official_url <- json2$relations$url$resource[json2$relations$type=='official homepage']
songkick_url <- json2$relations$url$resource[json2$relations$type=='songkick']
# extract songkick ID from songkick URL
return(basename(songkick_url))
}
get_songkick_id('Ariana Grande')
source('C:/Users/Tim/Git/admp/R/musicbrainz_json.R', echo=TRUE)
get_songkick_id('xxxtentacion')
lapply(top_20_artists, get_songkick_id)
lapply(top_20_artists, get_songkick_id, top_20_artists$Artist)
lapply(top_20_artists, mean)
lapply(top_20_artists, upper)
lapply(top_20_artists, toupper)
lapply(top_20_artists, get_songkick_id)
# function retrieve songkick id from musicbrainz
get_songkick_id <- function(artist_name) {
# build url for musicbrainz api query with artist search
json_url_for_mb_gid <- paste('http://musicbrainz.org/ws/js/artist?limit=1&q=',artist_name,'&inc=url-rels',sep="")
print(json_url_for_mb_gid)
# execute musicbrainz api query
json1 <- head(fromJSON(json_url_for_mb_gid),1)
# retrieve gid from musicbrainz data
mb_gid <- json1$gid
# building url for further musicbrainz api query to include 'relationship' URLs
json_url_for_links <- paste('http://musicbrainz.org/ws/2/artist/', mb_gid, '?inc=url-rels', sep="")
# execute second musicbrainz api query
json2 <- fromJSON(json_url_for_links)
# extract URLs
youtube_url <- json2$relations$url$resource[json2$relations$type=='youtube']
official_url <- json2$relations$url$resource[json2$relations$type=='official homepage']
songkick_url <- json2$relations$url$resource[json2$relations$type=='songkick']
# extract songkick ID from songkick URL
return(basename(songkick_url))
}
lapply(top_20_artists, get_songkick_id)
lapply(top_20_artists, get_songkick_id)
get_songkick_id('xxxtentacion'
get_songkick_id('xxxtentacion')
get_songkick_id('eminem')
lapply(top_20_artists, get_songkick_id)
lapply(top_20_artists, get_songkick_id)
# UDF  to retrieve songkick id from musicbrainz
get_songkick_id <- function(artist_name) {
# build url for musicbrainz api query with artist search
json_url_for_mb_gid <- paste('http://musicbrainz.org/ws/js/artist?limit=1&q=',artist_name,sep="")
# execute musicbrainz api query
json1 <- head(fromJSON(json_url_for_mb_gid),1)
# retrieve gid from musicbrainz data
mb_gid <- json1$gid
# building url for further musicbrainz api query to include 'relationship' URLs
json_url_for_links <- paste('http://musicbrainz.org/ws/2/artist/', mb_gid, '?inc=url-rels', sep="")
# execute second musicbrainz api query
json2 <- fromJSON(json_url_for_links)
# extract URLs
youtube_url <- json2$relations$url$resource[json2$relations$type=='youtube']
official_url <- json2$relations$url$resource[json2$relations$type=='official homepage']
songkick_url <- json2$relations$url$resource[json2$relations$type=='songkick']
# extract songkick ID from songkick URL
return(basename(songkick_url))
}
# import spotify dataset
spotify <- read.csv("Excel/spotify.csv")
# isolate last 6 months (last 26 weeks of 200 chart positions)
spotify_last6mo <- tail(spotify, 26*200)
# aggregate total plays per artists
artist_plays <- aggregate(spotify_last6mo$Plays, by=list(Artist=spotify_last6mo$Artist), FUN=sum)
# sort list and keep top 20
top_20 <- head(artist_plays[order(artist_plays$x, decreasing=TRUE),], 20)
rownames(top_20) <- 1:20
top_20_artists <- top_20[1]
get_songkick_id('eminem')
lapply(top_20_artists, get_songkick_id)
for (artist in top_20_artists){
print (get_songkick_id(artist))
}
print (artist)
View(top_20_artists)
for (artist in top_20_artists$Artist){
print (artist)
print (get_songkick_id(artist))
}
lapply(top_20_artists$Artist, get_songkick_id)
get_songkick_id("Calvin Harris")
get_songkick_id("Drake")
get_songkick_id("Calvin Harris")
get_songkick_id("Khalid")
get_songkick_id("Calvin Harris")
get_songkick_id("Calvin%20Harris")
# build url for musicbrainz api query with artist search
json_url_for_mb_gid <- URLencode(paste('http://musicbrainz.org/ws/js/artist?limit=1&q=',artist_name,sep=""))
get_songkick_id("Calvin Harris")
get_songkick_id("Calvin Harris")
URLencode(paste('http://musicbrainz.org/ws/js/artist?limit=1&q=',"Calvin Harris",sep=""))
get_songkick_id("Calvin Harris")
URLencode(paste('http://musicbrainz.org/ws/js/artist?limit=1&q=',"Calvin Harris",sep=""))
# UDF  to retrieve songkick id from musicbrainz
get_songkick_id <- function(artist_name) {
# build url for musicbrainz api query with artist search
json_url_for_mb_gid <- URLencode(paste('http://musicbrainz.org/ws/js/artist?limit=1&q=',artist_name,sep=""))
json_url_for_mb_gid
# execute musicbrainz api query
json1 <- head(fromJSON(json_url_for_mb_gid),1)
# retrieve gid from musicbrainz data
mb_gid <- json1$gid
# building url for further musicbrainz api query to include 'relationship' URLs
json_url_for_links <- paste('http://musicbrainz.org/ws/2/artist/', mb_gid, '?inc=url-rels', sep="")
# execute second musicbrainz api query
json2 <- fromJSON(json_url_for_links)
# extract URLs
youtube_url <- json2$relations$url$resource[json2$relations$type=='youtube']
official_url <- json2$relations$url$resource[json2$relations$type=='official homepage']
songkick_url <- json2$relations$url$resource[json2$relations$type=='songkick']
# extract songkick ID from songkick URL
return(basename(songkick_url))
}
get_songkick_id("Calvin Harris")
lapply(top_20_artists$Artist, get_songkick_id)
songkick_ids <- lapply(top_20_artists$Artist, get_songkick_id)
songkick_ids <- lapply(top_20_artists$Artist, get_songkick_id)
lapply(top_20_artists$Artist, get_songkick_id)
#lapply(top_20_artists$Artist, get_songkick_id)
for (artist in top_20_artists$Artist){
print (artist)
print (get_songkick_id(artist))
}
lapply(top_20_artists$Artist, get_songkick_id)
# lapply to get songkick IDs - unreliable (API traffic reject?)
#lapply(top_20_artists$Artist, get_songkick_id)
# for loop to get songkick IDs
songkick_ids <- vector("list", 20)
i <- 1
for (artist in top_20_artists$Artist){
songkick_ids[[i]] <- get_songkick_id(artist)
i <- i + 1
}
View(songkick_ids)
source('C:/Users/Tim/Git/admp/R/musicbrainz_json.R', echo=TRUE)
pause(0.5)
for (artist in top_20_artists$Artist){
songkick_ids[[i]] <- get_songkick_id(artist)
i <- i + 1
sys.sleep(0.5)
}
for (artist in top_20_artists$Artist){
songkick_ids[[i]] <- get_songkick_id(artist)
i <- i + 1
Sys.sleep(0.5)
}
View(songkick_ids)
# lapply to get songkick IDs - unreliable (API traffic reject?)
#lapply(top_20_artists$Artist, get_songkick_id)
# for loop to get songkick IDs
songkick_ids <- vector("list", 20)
i <- 1
for (artist in top_20_artists$Artist){
songkick_ids[[i]] <- get_songkick_id(artist)
i <- i + 1
Sys.sleep(0.5)
}
View(songkick_ids)
View(songkick_ids)
View(songkick_ids)
# lapply to get songkick IDs - unreliable (API traffic reject?)
lapply(top_20_artists$Artist, get_songkick_id)
for (artist in top_20_artists$Artist){
songkick_ids[[i]] <- get_songkick_id(artist)
i <- i + 1
}
Sys.sleep(0.5)
for (artist in top_20_artists$Artist){
songkick_ids[[i]] <- get_songkick_id(artist)
i <- i + 1
Sys.sleep(0.5)
}
# UDF  to retrieve songkick id from musicbrainz
get_songkick_id <- function(artist_name) {
# build url for musicbrainz api query with artist search
json_url_for_mb_gid <- URLencode(paste('http://musicbrainz.org/ws/js/artist?limit=1&q=',artist_name,sep=""))
json_url_for_mb_gid
# execute musicbrainz api query
json1 <- head(fromJSON(json_url_for_mb_gid),1)
# retrieve gid from musicbrainz data
mb_gid <- json1$gid
# building url for further musicbrainz api query to include 'relationship' URLs
json_url_for_links <- paste('http://musicbrainz.org/ws/2/artist/', mb_gid, '?inc=url-rels', sep="")
# execute second musicbrainz api query
json2 <- fromJSON(json_url_for_links)
# extract URLs
youtube_url <- json2$relations$url$resource[json2$relations$type=='youtube']
official_url <- json2$relations$url$resource[json2$relations$type=='official homepage']
songkick_url <- json2$relations$url$resource[json2$relations$type=='songkick']
Sys.sleep(0.5)
# extract songkick ID from songkick URL
return(basename(songkick_url))
}
# lapply to get songkick IDs - unreliable (API traffic reject?)
lapply(top_20_artists$Artist, get_songkick_id)
# lapply to get songkick IDs - unreliable (API traffic reject?)
songkick_ids <- lapply(top_20_artists$Artist, get_songkick_id)
View(songkick_ids)
cbind(top_20_artists$Artist, songkick_ids$value)
cbind(top_20_artists$Artist, songkick_ids)
cbind(top_20_artists, songkick_ids)
# lapply to get songkick IDs
songkick_ids <- lapply(top_20_artists$Artist, get_songkick_id)
$dfsdf
source('C:/Users/Tim/Git/admp/R/musicbrainz_json.R', echo=TRUE)
artist_name_to_songkick_id <- function(artist_name){
mb_gid <- artist_name_to_musicbrainz_gid(artist_name)
musicbrainz_gid_to_songkick_id(mb_gid)
}
artist_name_to_musicbrainz_gid <- function(artist_name) {
# build url for musicbrainz api query with artist search
json_url_for_mb_gid <- URLencode(paste('http://musicbrainz.org/ws/js/artist?limit=1&q=',artist_name,sep=""))
# execute musicbrainz api query
json1 <- head(fromJSON(json_url_for_mb_gid),1)
# retrieve gid from musicbrainz data
return(json1$gid)
}
musicbrainz_gid_to_songkick_id <- function(musicbrainz_gid) {
# building url for further musicbrainz api query to include 'relationship' URLs
json_url_for_links <- paste('http://musicbrainz.org/ws/2/artist/', mb_gid, '?inc=url-rels', sep="")
# execute second musicbrainz api query
json2 <- fromJSON(json_url_for_links)
# extract URLs
youtube_url <- json2$relations$url$resource[json2$relations$type=='youtube']
official_url <- json2$relations$url$resource[json2$relations$type=='official homepage']
songkick_url <- json2$relations$url$resource[json2$relations$type=='songkick']
Sys.sleep(0.5)
# extract songkick ID from songkick URL
return(basename(songkick_url))
}
artist_name_to_songkick_id("eminem")
artist_name_to_songkick_id <- function(artist_name){
mb_gid <- artist_name_to_musicbrainz_gid(artist_name)
musicbrainz_gid_to_songkick_id(mb_gid)
Sys.sleep(0.5)
}
artist_name_to_musicbrainz_gid <- function(artist_name) {
library(jsonlite)
# build url for musicbrainz api query with artist search
json_url_for_mb_gid <- URLencode(paste('http://musicbrainz.org/ws/js/artist?limit=1&q=',artist_name,sep=""))
# execute musicbrainz api query
json1 <- head(fromJSON(json_url_for_mb_gid),1)
# retrieve gid from musicbrainz data
return(json1$gid)
}
musicbrainz_gid_to_songkick_id <- function(musicbrainz_gid) {
library(jsonlite)
# building url for further musicbrainz api query to include 'relationship' URLs
json_url_for_links <- paste('http://musicbrainz.org/ws/2/artist/', mb_gid, '?inc=url-rels', sep="")
# execute second musicbrainz api query
json2 <- fromJSON(json_url_for_links)
# extract URLs
youtube_url <- json2$relations$url$resource[json2$relations$type=='youtube']
official_url <- json2$relations$url$resource[json2$relations$type=='official homepage']
songkick_url <- json2$relations$url$resource[json2$relations$type=='songkick']
# extract songkick ID from songkick URL
return(basename(songkick_url))
}
artist_name_to_songkick_id("eminem")
artist_name_to_musicbrainz_gid <- function(artist_name) {
library(jsonlite)
# build url for musicbrainz api query with artist search
json_url_for_mb_gid <- URLencode(paste('http://musicbrainz.org/ws/js/artist?limit=1&q=',artist_name,sep=""))
# execute musicbrainz api query
json1 <- head(fromJSON(json_url_for_mb_gid),1)
# retrieve gid from musicbrainz data
return(json1$gid)
}
musicbrainz_gid_to_songkick_id <- function(musicbrainz_gid) {
library(jsonlite)
# building url for further musicbrainz api query to include 'relationship' URLs
json_url_for_links <- paste('http://musicbrainz.org/ws/2/artist/', musicbrainz_gid, '?inc=url-rels', sep="")
# execute second musicbrainz api query
json2 <- fromJSON(json_url_for_links)
# extract URLs
youtube_url <- json2$relations$url$resource[json2$relations$type=='youtube']
official_url <- json2$relations$url$resource[json2$relations$type=='official homepage']
songkick_url <- json2$relations$url$resource[json2$relations$type=='songkick']
# extract songkick ID from songkick URL
return(basename(songkick_url))
}
artist_name_to_songkick_id <- function(artist_name){
mb_gid <- artist_name_to_musicbrainz_gid(artist_name)
musicbrainz_gid_to_songkick_id(mb_gid)
Sys.sleep(0.5)
}
artist_name_to_songkick_id("eminem")
artist_name_to_songkick_id <- function(artist_name){
mb_gid <- artist_name_to_musicbrainz_gid(artist_name)
result <- musicbrainz_gid_to_songkick_id(mb_gid)
Sys.sleep(0.5)
return(result)
}
artist_name_to_songkick_id("eminem")
# import spotify dataset
spotify <- read.csv("Excel/spotify.csv")
# isolate last 6 months (last 26 weeks of 200 chart positions)
spotify_last6mo <- tail(spotify, 26*200)
# aggregate total plays per artists
artist_plays <- aggregate(spotify_last6mo$Plays, by=list(Artist=spotify_last6mo$Artist), FUN=sum)
# sort list and keep top 20
top_20 <- head(artist_plays[order(artist_plays$x, decreasing=TRUE),], 20)
rownames(top_20) <- 1:20
top_20_artists <- top_20[1]
# lapply to get songkick IDs
songkick_ids <- lapply(top_20_artists$Artist, get_songkick_id)
# lapply to get songkick IDs
songkick_ids <- lapply(top_20_artists$Artist, artist_name_to_songkick_id)
View(songkick_ids)
songkick_artist_id <- artist_name_to_songkick_id("Eminem")
songkick_query_url <- paste ("https://api.songkick.com/api/3.0/artists/",
songkick_artist_id, "/gigography.json?apikey=", songkick_api_key, sep="")
songkick_api_key <- "OdCeFTr8qFUSwUVt"
songkick_artist_id <- artist_name_to_songkick_id("Eminem")
songkick_query_url <- paste ("https://api.songkick.com/api/3.0/artists/",
songkick_artist_id, "/gigography.json?apikey=", songkick_api_key, sep="")
library(jsonlite)
fromJSON(songkick_query_url)
songkick_query_url
songkick_api_key <- "OdCeFTr8qFUSwUVt"
songkick_artist_id <- artist_name_to_songkick_id("Eminem")
songkick_query_url <- paste ("https://api.songkick.com/api/3.0/artists/",
songkick_artist_id, "/gigography.json?apikey=", songkick_api_key, sep="")
library(jsonlite)
songkick_results <- fromJSON(songkick_query_url)
View(songkick_results)
# trying songkick query (results need decoding...)
songkick_api_key <- "OdCeFTr8qFUSwUVt"
songkick_artist_id <- artist_name_to_songkick_id("Eminem")
songkick_query_url <- paste ("https://api.songkick.com/api/3.0/artists/",
songkick_artist_id, "/gigography.json?apikey=", songkick_api_key, sep="")
library(jsonlite)
songkick_results <- fromJSON(songkick_query_url)
source('C:/Users/Tim/Git/admp/R/musicbrainz_json.R', echo=TRUE)
